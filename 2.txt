#include <stdio.h>
#include <math.h>
/*
한 점과 거리로 나타낼수 있는 것은 원이다
경우의 수:
1. 두 원이 접할 때
2. 두 원이 교차할 때
3. 두 원이 같을 때
4. 두 원이 만나지 않을 때
이걸 어떻게 분류할까?

- 두 원이 접할 때
  1. 두 점 사이 거리 == r1 +r2
  2. 두 점 사이 거리 + r1 == r2
  3. 두 점 사이 거리 + r2 == r1
- 두 원이 같을 때
  1. 두 점이 같고, r1== r2
- 두 원이 만나지 않을 때
  1. 두 점이 같고, r1 != r2
  2. 두 점 사이의 거리 > r1 + r2
  3. 두 점 사이의 거리 + r1 < r2
  4. 두 점 사이의 거리 + r2 < r1
- 두 원이 교차할 때
 1. 다 아닌 경우

 두 점 사이의 거리 = x1-x2 + y1-y2
*/
int countCoordinate(float x1, float x2, float y1, float y2, int r1, int r2);

int main(void) {
  int testCase;
  float x1,x2;
  float y1,y2;
  int r1,r2;

  scanf("%d", &testCase);

  int count[testCase];

  for(int i=0; i<testCase; i++){
    scanf("%f %f %d", &x1, &y1, &r1);
    scanf("%f %f %d", &x2, &y2, &r2);

    count[i] = countCoordinate(x1, x2, y1, y2, r1, r2);
  }

  for(int i=0; i<testCase; i++){
    printf("%d\n", count[i]);
  }
  
  return 0;
}

int countCoordinate(float x1, float x2, float y1, float y2, int r1, int r2){
  float distance = sqrt(pow(x1-x2,2) + pow(y1-y2,2));

  if(distance ==0 && r1 == r2){
    return -1;
  }

  if(distance == r1+r2 ||
  distance + r1 == r2 ||
  distance + r2 == r1){
    return 1;
  }else if((distance ==0 && r1 != r2) ||
  distance > r1 +r2 ||
  distance + r1 < r2||
  distance + r2 < r1){
    return 0;
  }else{
    return 2;
  }
}